// Code generated by goctl. DO NOT EDIT.
// Source: user.proto

package authenticate

import (
	"context"

	"sakura/aurora/rpc/user/types"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	Authenticated       = types.Authenticated
	UsernameAndPassword = types.UsernameAndPassword

	Authenticate interface {
		Username(ctx context.Context, in *UsernameAndPassword, opts ...grpc.CallOption) (*Authenticated, error)
	}

	defaultAuthenticate struct {
		cli zrpc.Client
	}
)

func NewAuthenticate(cli zrpc.Client) Authenticate {
	return &defaultAuthenticate{
		cli: cli,
	}
}

func (m *defaultAuthenticate) Username(ctx context.Context, in *UsernameAndPassword, opts ...grpc.CallOption) (*Authenticated, error) {
	client := types.NewAuthenticateClient(m.cli.Conn())
	return client.Username(ctx, in, opts...)
}
